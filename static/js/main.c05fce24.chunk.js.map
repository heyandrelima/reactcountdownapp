{"version":3,"sources":["Countdown.jsx","App.jsx","index.js"],"names":["Countdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","months","days","hours","minutes","seconds","_isMounted","getTimeUntil","deadline","_this2","setInterval","time","Date","parse","Math","floor","setState","number","react_default","a","createElement","className","leadingZero","Component","App","newDeadline","showAlert","event","preventDefault","document","querySelector","value","Alert","bsStyle","onDismiss","dismissAlert","Button","onClick","src_Countdown","Form","inline","onSubmit","updateDeadline","FormControl","onChange","target","type","placeholder","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.c05fce24.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Countdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            months: 0,\n            days: 0,\n            hours: 0,\n            minutes: 0,\n            seconds: 0\n        };\n\n        this._isMounted = false;\n    }\n\n    componentWillMount() {\n        this.getTimeUntil(this.props.deadline);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n\n        setInterval(() => this.getTimeUntil(this.props.deadline), 1000);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    getTimeUntil(deadline) {\n        if (this._isMounted) {\n            const time = Date.parse(deadline) - Date.parse(new Date());\n\n            const seconds = Math.floor((time / 1000) % 60);\n            const minutes = Math.floor((time / 1000 / 60) % 60);\n            const hours = Math.floor((time / 1000 / 60 / 60) % 24);\n            const days = Math.floor((time / 1000 / 60 / 60 / 24) % 30);\n            const months = Math.floor(time / 1000 / 60 / 60 / 24 / 30);\n\n            this.setState({ months, days, hours, minutes, seconds });\n        }\n    }\n\n    leadingZero(number) {\n        return number < 10 ? '0' + number : number;\n    }\n\n    render() {\n        return (\n            <div className=\"countdown-info\">\n                <span>{this.leadingZero(this.state.months)} months</span>\n                <span>{this.leadingZero(this.state.days)} days</span>\n                <span>{this.leadingZero(this.state.hours)} hours</span>\n                <span>{this.leadingZero(this.state.minutes)} minutes</span>\n                <span>{this.leadingZero(this.state.seconds)} seconds</span>\n            </div>\n        );\n    }\n}\n\nexport default Countdown;","import React, { Component } from 'react';\nimport Countdown from './Countdown';\nimport './App.css';\nimport {Form, FormControl, Button, Alert} from 'react-bootstrap';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deadline: 'December 25, 2018',\n            newDeadline: '',\n            showAlert: false\n        };\n    }\n\n    updateDeadline(event) {\n        event.preventDefault();\n\n        if (Date.parse(this.state.newDeadline) > Date.parse(new Date())) {\n            this.setState({\n                deadline: this.state.newDeadline,\n                showAlert: false\n            });\n        } else {\n            this.setState({showAlert: true});\n        }\n\n        document.querySelector('.new-date input').value = '';\n    }\n\n    dismissAlert() {\n        this.setState({ showAlert: false });\n    }\n\n    render() {\n        if (this.state.showAlert) {\n            return (\n                <div className=\"App\">\n                    <Alert bsStyle=\"danger\" onDismiss={() => this.dismissAlert()}>\n                        <h2>This app only works with dates in the future</h2>\n\n                        <Button onClick={() => this.dismissAlert()}>Dismiss</Button>\n                    </Alert>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <header>\n                        <h1>Countdown to {this.state.deadline}</h1>\n                    </header>\n\n                    <main>\n                        <Countdown\n                            deadline={this.state.deadline}\n                        />\n\n                        <Form className=\"new-date\" inline\n                            onSubmit={event => this.updateDeadline(event)}\n                        >\n                            <FormControl onChange={event => this.setState({ newDeadline: event.target.value })} type=\"text\" placeholder=\"New date\" />\n                            <Button type=\"submit\">Submit</Button>\n                        </Form>\n                    </main>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}